name: 'Beta'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Get latest release version
      uses: InsonusK/get-latest-release@v1.0.1
      id: latest_version
      with:
        myToken: ${{ github.token }}
        exclude_types: draft
        view_top: 1

    - name: Bump version
      run: |
        cat << EOF > bump.py
        import re
        latest_version = '${{ steps.latest_version.outputs.tag_name }}'
        if 'beta' in latest_version:
          base_version = re.sub('-beta.*$', '', latest_version)
          beta_version = str(int(re.sub('^.*-beta', '', latest_version)) + 1)
        else:
          base_version = latest_version
          beta_version = '0'
          base_version = list(map(int, base_version.split('.')))
          base_version[2] += 1
          for n in range(2):
            if base_version[2-n] > 9:
            base_version[2-n] = 0
            base_version[1-n] += 1
          base_version = '.'.join(str(x) for x in base_version)
        version_code = base_version.replace('.', '') + beta_version.rjust(3, '0')
        version_name = base_version + '-beta' + beta_version
        print(f'''\
        VERSION_CODE={version_code}
        VERSION_NAME={version_name}\
        ''')
        EOF
        eval $(python3 bump.py)
        sed -i "s|versionName .*|versionName \"$VERSION_NAME\"|; s|versionCode .*|versionCode $VERSION_CODE|" app/build.gradle
        echo "VERSION=v$VERSION_NAME" >> $GITHUB_ENV
        echo "FILENAME=delta-v$VERSION_NAME" >> $GITHUB_ENV

    - name: Create changelog
      run: |
        AMOUNT=$(sed -n '/category title="New"/,/category title="Google"/p' app/src/main/res/xml/drawable.xml | grep '<item' | wc -l)
        mkdir -v changelog && cd $_
        cat << EOF > whatsnew-en-US
        - $AMOUNT new icons
        - Full changelog will be published upon release!
        EOF
        cat << EOF > ../app/src/main/res/values/changelog.xml
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="changelog_date"></string>
            <string-array name="changelog">
                <item><![CDATA[<font color=#ff837d>$AMOUNT</font>]]> new icons</item>
                <item>Full changelog will be published upon release!</item>
            </string-array>
        </resources>
        EOF

    - name: Restore the license key
      run: echo LICENSE_KEY="${{ secrets.LICENSE_KEY }}" > local.properties

    - name: Restore the service account
      run: echo "${{ secrets.SERVICE_ACCOUNT_BASE64 }}" | base64 -d > service_account.json

    - name: Build AAB
      run: bash gradlew bundleRelease

    - name: Build APK
      run: bash gradlew assembleRelease

    - name: Move AAB and APK
      run: |
        mkdir -v build && cd $_
        mv -v ../app/build/outputs/bundle/release/*.aab delta.aab
        mv -v ../app/build/outputs/apk/release/*.apk delta.apk

    - name: Sign AAB and APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: build
        signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        alias: ${{ secrets.KEYSTORE_KEY_ALIAS }}

    - name: Rename AAB and APK
      run: |
        cd build
        mv -v delta.aab ../${{ env.FILENAME }}.aab
        mv -v delta-signed.apk ../${{ env.FILENAME }}.apk

    - name: Upload APK in Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FILENAME }}
        path: ${{ env.FILENAME }}.apk
        retention-days: 30

    - name: Create a GitHub pre-release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        files: ${{ env.FILENAME }}.apk
        name: ${{ env.VERSION }}
        tag_name: ${{ env.VERSION }}
        body_path: changelog/whatsnew-en-US

    - name: Publish a pre-release to Google Play
      uses: r0adkll/upload-google-play@v1.0.15
      with:
        track: beta
        releaseFiles: ${{ env.FILENAME }}.aab
        serviceAccountJson: service_account.json
        packageName: website.leifs.delta
        mappingFile: app/build/outputs/mapping/release/mapping.txt
        whatsNewDirectory: changelog
        inAppUpdatePriority: 5
